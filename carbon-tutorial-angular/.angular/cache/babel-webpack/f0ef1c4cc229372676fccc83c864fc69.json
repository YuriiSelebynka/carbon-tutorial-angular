{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';\nimport { getAttributes } from '@carbon/icon-helpers';\nimport * as ɵngcc0 from '@angular/core';\n\nvar CheckboxCheckedFilledComponent =\n/** @class */\nfunction () {\n  function CheckboxCheckedFilledComponent() {\n    this.focusable = false;\n  }\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledComponent.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledComponent.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CheckboxCheckedFilledComponent.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CheckboxCheckedFilledComponent.prototype, \"focusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledComponent.prototype, \"innerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledComponent.prototype, \"size\", void 0);\n\n  CheckboxCheckedFilledComponent.ɵfac = function CheckboxCheckedFilledComponent_Factory(t) {\n    return new (t || CheckboxCheckedFilledComponent)();\n  };\n\n  CheckboxCheckedFilledComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CheckboxCheckedFilledComponent,\n    selectors: [[\"ibm-icon-checkbox-checked-filled\"]],\n    inputs: {\n      focusable: \"focusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      innerClass: \"innerClass\",\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[\"ibmIconCheckboxCheckedFilled\", \"\", 3, \"size\", \"ariaLabel\", \"ariaLabelledby\", \"ariaHidden\", \"title\", \"isFocusable\"]],\n    template: function CheckboxCheckedFilledComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(0, \"svg\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledby\", ctx.ariaLabelledby)(\"ariaHidden\", ctx.ariaHidden)(\"title\", ctx.title)(\"isFocusable\", ctx.focusable);\n        ɵngcc0.ɵɵattribute(\"class\", ctx.innerClass);\n      }\n    },\n    directives: function () {\n      return [CheckboxCheckedFilledDirective];\n    },\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CheckboxCheckedFilledComponent;\n}();\n\nvar CheckboxCheckedFilledDirective =\n/** @class */\nfunction () {\n  function CheckboxCheckedFilledDirective(elementRef) {\n    this.elementRef = elementRef;\n    this.isFocusable = false;\n    this.icons = {\n      \"32\": {\n        metadata: {\n          \"moduleName\": \"CheckboxCheckedFilled32\",\n          \"filepath\": \"checkbox--checked--filled/32.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 32,\n              \"height\": 32\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"fill\": \"none\",\n                \"d\": \"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\",\n                \"data-icon-path\": \"inner-path\"\n              }\n            }],\n            \"name\": \"checkbox--checked--filled\",\n            \"size\": 32\n          },\n          \"size\": 32\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\"></path><path fill=\\\"none\\\" d=\\\"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\" data-icon-path=\\\"inner-path\\\"></path></svg>\"\n      },\n      \"24\": {\n        metadata: {\n          \"moduleName\": \"CheckboxCheckedFilled24\",\n          \"filepath\": \"checkbox--checked--filled/24.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 24,\n              \"height\": 24\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"fill\": \"none\",\n                \"d\": \"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\",\n                \"data-icon-path\": \"inner-path\"\n              }\n            }],\n            \"name\": \"checkbox--checked--filled\",\n            \"size\": 24\n          },\n          \"size\": 24\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\"></path><path fill=\\\"none\\\" d=\\\"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\" data-icon-path=\\\"inner-path\\\"></path></svg>\"\n      },\n      \"20\": {\n        metadata: {\n          \"moduleName\": \"CheckboxCheckedFilled20\",\n          \"filepath\": \"checkbox--checked--filled/20.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 20,\n              \"height\": 20\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"fill\": \"none\",\n                \"d\": \"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\",\n                \"data-icon-path\": \"inner-path\"\n              }\n            }],\n            \"name\": \"checkbox--checked--filled\",\n            \"size\": 20\n          },\n          \"size\": 20\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\"></path><path fill=\\\"none\\\" d=\\\"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\" data-icon-path=\\\"inner-path\\\"></path></svg>\"\n      },\n      \"16\": {\n        metadata: {\n          \"moduleName\": \"CheckboxCheckedFilled16\",\n          \"filepath\": \"checkbox--checked--filled/16.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 16,\n              \"height\": 16\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"fill\": \"none\",\n                \"d\": \"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\",\n                \"data-icon-path\": \"inner-path\"\n              }\n            }],\n            \"name\": \"checkbox--checked--filled\",\n            \"size\": 16\n          },\n          \"size\": 16\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\"></path><path fill=\\\"none\\\" d=\\\"M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z\\\" data-icon-path=\\\"inner-path\\\"></path></svg>\"\n      }\n    };\n  }\n\n  CheckboxCheckedFilledDirective_1 = CheckboxCheckedFilledDirective;\n\n  CheckboxCheckedFilledDirective.prototype.ngAfterViewInit = function () {\n    var svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var icon = this.icons[this.size];\n    var domParser = new DOMParser();\n    var rawSVG = icon.svg;\n    var svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    var node = svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    var attributes = getAttributes({\n      width: icon.metadata.descriptor.attrs.height,\n      height: icon.metadata.descriptor.attrs.height,\n      viewBox: icon.metadata.descriptor.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    var attrKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attrKeys.length; i++) {\n      var key = attrKeys[i];\n      var value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      var title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      CheckboxCheckedFilledDirective_1.titleIdCounter++;\n      title.setAttribute(\"id\", \"checkbox-checked-filled-\" + CheckboxCheckedFilledDirective_1.titleIdCounter);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", \"checkbox-checked-filled-\" + CheckboxCheckedFilledDirective_1.titleIdCounter);\n    }\n  };\n\n  var CheckboxCheckedFilledDirective_1;\n  CheckboxCheckedFilledDirective.titleIdCounter = 0;\n\n  CheckboxCheckedFilledDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }];\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledDirective.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledDirective.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CheckboxCheckedFilledDirective.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledDirective.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CheckboxCheckedFilledDirective.prototype, \"isFocusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], CheckboxCheckedFilledDirective.prototype, \"size\", void 0);\n\n  CheckboxCheckedFilledDirective = CheckboxCheckedFilledDirective_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], CheckboxCheckedFilledDirective);\n\n  CheckboxCheckedFilledDirective.ɵfac = function CheckboxCheckedFilledDirective_Factory(t) {\n    return new (t || CheckboxCheckedFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  CheckboxCheckedFilledDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CheckboxCheckedFilledDirective,\n    selectors: [[\"\", \"ibmIconCheckboxCheckedFilled\", \"\"]],\n    inputs: {\n      isFocusable: \"isFocusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      size: \"size\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CheckboxCheckedFilledDirective;\n}();\n\nvar CheckboxCheckedFilledModule =\n/** @class */\nfunction () {\n  function CheckboxCheckedFilledModule() {}\n\n  CheckboxCheckedFilledModule.ɵfac = function CheckboxCheckedFilledModule_Factory(t) {\n    return new (t || CheckboxCheckedFilledModule)();\n  };\n\n  CheckboxCheckedFilledModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CheckboxCheckedFilledModule\n  });\n  CheckboxCheckedFilledModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CheckboxCheckedFilledModule, {\n      declarations: [CheckboxCheckedFilledComponent, CheckboxCheckedFilledDirective],\n      exports: [CheckboxCheckedFilledComponent, CheckboxCheckedFilledDirective]\n    });\n  })();\n\n  return CheckboxCheckedFilledModule;\n}();\n\nexport { CheckboxCheckedFilledComponent, CheckboxCheckedFilledDirective, CheckboxCheckedFilledModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}