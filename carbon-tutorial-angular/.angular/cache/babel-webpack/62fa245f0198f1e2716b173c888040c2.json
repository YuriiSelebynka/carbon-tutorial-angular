{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';\nimport { getAttributes } from '@carbon/icon-helpers';\nimport * as ɵngcc0 from '@angular/core';\n\nvar SendAltFilledComponent =\n/** @class */\nfunction () {\n  function SendAltFilledComponent() {\n    this.focusable = false;\n  }\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledComponent.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledComponent.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SendAltFilledComponent.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SendAltFilledComponent.prototype, \"focusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledComponent.prototype, \"innerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledComponent.prototype, \"size\", void 0);\n\n  SendAltFilledComponent.ɵfac = function SendAltFilledComponent_Factory(t) {\n    return new (t || SendAltFilledComponent)();\n  };\n\n  SendAltFilledComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SendAltFilledComponent,\n    selectors: [[\"ibm-icon-send-alt-filled\"]],\n    inputs: {\n      focusable: \"focusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      innerClass: \"innerClass\",\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[\"ibmIconSendAltFilled\", \"\", 3, \"size\", \"ariaLabel\", \"ariaLabelledby\", \"ariaHidden\", \"title\", \"isFocusable\"]],\n    template: function SendAltFilledComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(0, \"svg\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledby\", ctx.ariaLabelledby)(\"ariaHidden\", ctx.ariaHidden)(\"title\", ctx.title)(\"isFocusable\", ctx.focusable);\n        ɵngcc0.ɵɵattribute(\"class\", ctx.innerClass);\n      }\n    },\n    directives: function () {\n      return [SendAltFilledDirective];\n    },\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return SendAltFilledComponent;\n}();\n\nvar SendAltFilledDirective =\n/** @class */\nfunction () {\n  function SendAltFilledDirective(elementRef) {\n    this.elementRef = elementRef;\n    this.isFocusable = false;\n    this.icons = {\n      \"32\": {\n        metadata: {\n          \"moduleName\": \"SendAltFilled32\",\n          \"filepath\": \"send--alt--filled/32.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 32,\n              \"height\": 32\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n              }\n            }],\n            \"name\": \"send--alt--filled\",\n            \"size\": 32\n          },\n          \"size\": 32\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\\\"></path></svg>\"\n      },\n      \"24\": {\n        metadata: {\n          \"moduleName\": \"SendAltFilled24\",\n          \"filepath\": \"send--alt--filled/24.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 24,\n              \"height\": 24\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n              }\n            }],\n            \"name\": \"send--alt--filled\",\n            \"size\": 24\n          },\n          \"size\": 24\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\\\"></path></svg>\"\n      },\n      \"20\": {\n        metadata: {\n          \"moduleName\": \"SendAltFilled20\",\n          \"filepath\": \"send--alt--filled/20.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 20,\n              \"height\": 20\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n              }\n            }],\n            \"name\": \"send--alt--filled\",\n            \"size\": 20\n          },\n          \"size\": 20\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\\\"></path></svg>\"\n      },\n      \"16\": {\n        metadata: {\n          \"moduleName\": \"SendAltFilled16\",\n          \"filepath\": \"send--alt--filled/16.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 16,\n              \"height\": 16\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n              }\n            }],\n            \"name\": \"send--alt--filled\",\n            \"size\": 16\n          },\n          \"size\": 16\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\\\"></path></svg>\"\n      }\n    };\n  }\n\n  SendAltFilledDirective_1 = SendAltFilledDirective;\n\n  SendAltFilledDirective.prototype.ngAfterViewInit = function () {\n    var svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var icon = this.icons[this.size];\n    var domParser = new DOMParser();\n    var rawSVG = icon.svg;\n    var svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    var node = svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    var attributes = getAttributes({\n      width: icon.metadata.descriptor.attrs.height,\n      height: icon.metadata.descriptor.attrs.height,\n      viewBox: icon.metadata.descriptor.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    var attrKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attrKeys.length; i++) {\n      var key = attrKeys[i];\n      var value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      var title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      SendAltFilledDirective_1.titleIdCounter++;\n      title.setAttribute(\"id\", \"send-alt-filled-\" + SendAltFilledDirective_1.titleIdCounter);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", \"send-alt-filled-\" + SendAltFilledDirective_1.titleIdCounter);\n    }\n  };\n\n  var SendAltFilledDirective_1;\n  SendAltFilledDirective.titleIdCounter = 0;\n\n  SendAltFilledDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }];\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledDirective.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledDirective.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SendAltFilledDirective.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledDirective.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SendAltFilledDirective.prototype, \"isFocusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SendAltFilledDirective.prototype, \"size\", void 0);\n\n  SendAltFilledDirective = SendAltFilledDirective_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], SendAltFilledDirective);\n\n  SendAltFilledDirective.ɵfac = function SendAltFilledDirective_Factory(t) {\n    return new (t || SendAltFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  SendAltFilledDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SendAltFilledDirective,\n    selectors: [[\"\", \"ibmIconSendAltFilled\", \"\"]],\n    inputs: {\n      isFocusable: \"isFocusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      size: \"size\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return SendAltFilledDirective;\n}();\n\nvar SendAltFilledModule =\n/** @class */\nfunction () {\n  function SendAltFilledModule() {}\n\n  SendAltFilledModule.ɵfac = function SendAltFilledModule_Factory(t) {\n    return new (t || SendAltFilledModule)();\n  };\n\n  SendAltFilledModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SendAltFilledModule\n  });\n  SendAltFilledModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SendAltFilledModule, {\n      declarations: [SendAltFilledComponent, SendAltFilledDirective],\n      exports: [SendAltFilledComponent, SendAltFilledDirective]\n    });\n  })();\n\n  return SendAltFilledModule;\n}();\n\nexport { SendAltFilledComponent, SendAltFilledDirective, SendAltFilledModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}