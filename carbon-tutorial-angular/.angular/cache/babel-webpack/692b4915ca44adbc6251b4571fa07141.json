{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';\nimport { getAttributes } from '@carbon/icon-helpers';\nimport * as ɵngcc0 from '@angular/core';\n\nvar WatsonHealthCircleMeasurementComponent =\n/** @class */\nfunction () {\n  function WatsonHealthCircleMeasurementComponent() {\n    this.focusable = false;\n  }\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementComponent.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementComponent.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealthCircleMeasurementComponent.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealthCircleMeasurementComponent.prototype, \"focusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementComponent.prototype, \"innerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementComponent.prototype, \"size\", void 0);\n\n  WatsonHealthCircleMeasurementComponent.ɵfac = function WatsonHealthCircleMeasurementComponent_Factory(t) {\n    return new (t || WatsonHealthCircleMeasurementComponent)();\n  };\n\n  WatsonHealthCircleMeasurementComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: WatsonHealthCircleMeasurementComponent,\n    selectors: [[\"ibm-icon-watson-health-circle-measurement\"]],\n    inputs: {\n      focusable: \"focusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      innerClass: \"innerClass\",\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[\"ibmIconWatsonHealthCircleMeasurement\", \"\", 3, \"size\", \"ariaLabel\", \"ariaLabelledby\", \"ariaHidden\", \"title\", \"isFocusable\"]],\n    template: function WatsonHealthCircleMeasurementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(0, \"svg\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledby\", ctx.ariaLabelledby)(\"ariaHidden\", ctx.ariaHidden)(\"title\", ctx.title)(\"isFocusable\", ctx.focusable);\n        ɵngcc0.ɵɵattribute(\"class\", ctx.innerClass);\n      }\n    },\n    directives: function () {\n      return [WatsonHealthCircleMeasurementDirective];\n    },\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return WatsonHealthCircleMeasurementComponent;\n}();\n\nvar WatsonHealthCircleMeasurementDirective =\n/** @class */\nfunction () {\n  function WatsonHealthCircleMeasurementDirective(elementRef) {\n    this.elementRef = elementRef;\n    this.isFocusable = false;\n    this.icons = {\n      \"32\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealthCircleMeasurement32\",\n          \"filepath\": \"watson-health/circle-measurement/32.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 32,\n              \"height\": 32\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\"\n              }\n            }],\n            \"name\": \"circle-measurement\",\n            \"size\": 32\n          },\n          \"size\": 32\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\\\"></path><path d=\\\"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\\\"></path></svg>\"\n      },\n      \"24\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealthCircleMeasurement24\",\n          \"filepath\": \"watson-health/circle-measurement/24.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 24,\n              \"height\": 24\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\"\n              }\n            }],\n            \"name\": \"circle-measurement\",\n            \"size\": 24\n          },\n          \"size\": 24\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\\\"></path><path d=\\\"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\\\"></path></svg>\"\n      },\n      \"20\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealthCircleMeasurement20\",\n          \"filepath\": \"watson-health/circle-measurement/20.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 20,\n              \"height\": 20\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\"\n              }\n            }],\n            \"name\": \"circle-measurement\",\n            \"size\": 20\n          },\n          \"size\": 20\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\\\"></path><path d=\\\"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\\\"></path></svg>\"\n      },\n      \"16\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealthCircleMeasurement16\",\n          \"filepath\": \"watson-health/circle-measurement/16.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 16,\n              \"height\": 16\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\"\n              }\n            }, {\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\"\n              }\n            }],\n            \"name\": \"circle-measurement\",\n            \"size\": 16\n          },\n          \"size\": 16\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\\\"></path><path d=\\\"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\\\"></path></svg>\"\n      }\n    };\n  }\n\n  WatsonHealthCircleMeasurementDirective_1 = WatsonHealthCircleMeasurementDirective;\n\n  WatsonHealthCircleMeasurementDirective.prototype.ngAfterViewInit = function () {\n    var svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var icon = this.icons[this.size];\n    var domParser = new DOMParser();\n    var rawSVG = icon.svg;\n    var svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    var node = svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    var attributes = getAttributes({\n      width: icon.metadata.descriptor.attrs.height,\n      height: icon.metadata.descriptor.attrs.height,\n      viewBox: icon.metadata.descriptor.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    var attrKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attrKeys.length; i++) {\n      var key = attrKeys[i];\n      var value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      var title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      WatsonHealthCircleMeasurementDirective_1.titleIdCounter++;\n      title.setAttribute(\"id\", \"watson-health-circle-measurement-\" + WatsonHealthCircleMeasurementDirective_1.titleIdCounter);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", \"watson-health-circle-measurement-\" + WatsonHealthCircleMeasurementDirective_1.titleIdCounter);\n    }\n  };\n\n  var WatsonHealthCircleMeasurementDirective_1;\n  WatsonHealthCircleMeasurementDirective.titleIdCounter = 0;\n\n  WatsonHealthCircleMeasurementDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }];\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementDirective.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementDirective.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealthCircleMeasurementDirective.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementDirective.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealthCircleMeasurementDirective.prototype, \"isFocusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealthCircleMeasurementDirective.prototype, \"size\", void 0);\n\n  WatsonHealthCircleMeasurementDirective = WatsonHealthCircleMeasurementDirective_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], WatsonHealthCircleMeasurementDirective);\n\n  WatsonHealthCircleMeasurementDirective.ɵfac = function WatsonHealthCircleMeasurementDirective_Factory(t) {\n    return new (t || WatsonHealthCircleMeasurementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  WatsonHealthCircleMeasurementDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: WatsonHealthCircleMeasurementDirective,\n    selectors: [[\"\", \"ibmIconWatsonHealthCircleMeasurement\", \"\"]],\n    inputs: {\n      isFocusable: \"isFocusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      size: \"size\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return WatsonHealthCircleMeasurementDirective;\n}();\n\nvar WatsonHealthCircleMeasurementModule =\n/** @class */\nfunction () {\n  function WatsonHealthCircleMeasurementModule() {}\n\n  WatsonHealthCircleMeasurementModule.ɵfac = function WatsonHealthCircleMeasurementModule_Factory(t) {\n    return new (t || WatsonHealthCircleMeasurementModule)();\n  };\n\n  WatsonHealthCircleMeasurementModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: WatsonHealthCircleMeasurementModule\n  });\n  WatsonHealthCircleMeasurementModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthCircleMeasurementModule, {\n      declarations: [WatsonHealthCircleMeasurementComponent, WatsonHealthCircleMeasurementDirective],\n      exports: [WatsonHealthCircleMeasurementComponent, WatsonHealthCircleMeasurementDirective]\n    });\n  })();\n\n  return WatsonHealthCircleMeasurementModule;\n}();\n\nexport { WatsonHealthCircleMeasurementComponent, WatsonHealthCircleMeasurementDirective, WatsonHealthCircleMeasurementModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}