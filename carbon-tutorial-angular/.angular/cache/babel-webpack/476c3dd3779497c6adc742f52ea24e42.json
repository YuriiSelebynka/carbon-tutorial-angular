{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';\nimport { getAttributes } from '@carbon/icon-helpers';\nimport * as ɵngcc0 from '@angular/core';\n\nvar WatsonHealth_3DCurveAutoVesselsComponent =\n/** @class */\nfunction () {\n  function WatsonHealth_3DCurveAutoVesselsComponent() {\n    this.focusable = false;\n  }\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"focusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"innerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsComponent.prototype, \"size\", void 0);\n\n  WatsonHealth_3DCurveAutoVesselsComponent.ɵfac = function WatsonHealth_3DCurveAutoVesselsComponent_Factory(t) {\n    return new (t || WatsonHealth_3DCurveAutoVesselsComponent)();\n  };\n\n  WatsonHealth_3DCurveAutoVesselsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: WatsonHealth_3DCurveAutoVesselsComponent,\n    selectors: [[\"ibm-icon-watson-health-3-d-curve-auto-vessels\"]],\n    inputs: {\n      focusable: \"focusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      innerClass: \"innerClass\",\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[\"ibmIconWatsonHealth_3DCurveAutoVessels\", \"\", 3, \"size\", \"ariaLabel\", \"ariaLabelledby\", \"ariaHidden\", \"title\", \"isFocusable\"]],\n    template: function WatsonHealth_3DCurveAutoVesselsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(0, \"svg\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledby\", ctx.ariaLabelledby)(\"ariaHidden\", ctx.ariaHidden)(\"title\", ctx.title)(\"isFocusable\", ctx.focusable);\n        ɵngcc0.ɵɵattribute(\"class\", ctx.innerClass);\n      }\n    },\n    directives: function () {\n      return [WatsonHealth_3DCurveAutoVesselsDirective];\n    },\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return WatsonHealth_3DCurveAutoVesselsComponent;\n}();\n\nvar WatsonHealth_3DCurveAutoVesselsDirective =\n/** @class */\nfunction () {\n  function WatsonHealth_3DCurveAutoVesselsDirective(elementRef) {\n    this.elementRef = elementRef;\n    this.isFocusable = false;\n    this.icons = {\n      \"32\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealth3DCurveAutoVessels32\",\n          \"filepath\": \"watson-health/3D-curve--auto-vessels/32.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 32,\n              \"height\": 32\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\"\n              }\n            }],\n            \"name\": \"3D-curve--auto-vessels\",\n            \"size\": 32\n          },\n          \"size\": 32\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\\\"></path></svg>\"\n      },\n      \"24\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealth3DCurveAutoVessels24\",\n          \"filepath\": \"watson-health/3D-curve--auto-vessels/24.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 24,\n              \"height\": 24\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\"\n              }\n            }],\n            \"name\": \"3D-curve--auto-vessels\",\n            \"size\": 24\n          },\n          \"size\": 24\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\\\"></path></svg>\"\n      },\n      \"20\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealth3DCurveAutoVessels20\",\n          \"filepath\": \"watson-health/3D-curve--auto-vessels/20.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 20,\n              \"height\": 20\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\"\n              }\n            }],\n            \"name\": \"3D-curve--auto-vessels\",\n            \"size\": 20\n          },\n          \"size\": 20\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\\\"></path></svg>\"\n      },\n      \"16\": {\n        metadata: {\n          \"moduleName\": \"WatsonHealth3DCurveAutoVessels16\",\n          \"filepath\": \"watson-health/3D-curve--auto-vessels/16.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 16,\n              \"height\": 16\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\"\n              }\n            }],\n            \"name\": \"3D-curve--auto-vessels\",\n            \"size\": 16\n          },\n          \"size\": 16\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M17,11a3,3,0,0,1,3-3h.1a5,5,0,1,0,0-2H20a5,5,0,0,0-5,5v1H13a3,3,0,0,1-3-3V7A5,5,0,0,0,5,2H4V4H5A3,3,0,0,1,8,7V9a5,5,0,0,0,5,5h2v7a3,3,0,0,1-3,3h-.1a5,5,0,1,0,0,2H12a5,5,0,0,0,5-5h2.5A2.5,2.5,0,0,1,22,23.5,4.51,4.51,0,0,0,26.5,28H28V26H26.5A2.5,2.5,0,0,1,24,23.5,4.51,4.51,0,0,0,19.5,19H17Zm8-7a3,3,0,1,1-3,3A3,3,0,0,1,25,4ZM7,28a3,3,0,1,1,3-3A3,3,0,0,1,7,28Z\\\"></path></svg>\"\n      }\n    };\n  }\n\n  WatsonHealth_3DCurveAutoVesselsDirective_1 = WatsonHealth_3DCurveAutoVesselsDirective;\n\n  WatsonHealth_3DCurveAutoVesselsDirective.prototype.ngAfterViewInit = function () {\n    var svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var icon = this.icons[this.size];\n    var domParser = new DOMParser();\n    var rawSVG = icon.svg;\n    var svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    var node = svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    var attributes = getAttributes({\n      width: icon.metadata.descriptor.attrs.height,\n      height: icon.metadata.descriptor.attrs.height,\n      viewBox: icon.metadata.descriptor.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    var attrKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attrKeys.length; i++) {\n      var key = attrKeys[i];\n      var value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      var title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      WatsonHealth_3DCurveAutoVesselsDirective_1.titleIdCounter++;\n      title.setAttribute(\"id\", \"watson-health-3-d-curve-auto-vessels-\" + WatsonHealth_3DCurveAutoVesselsDirective_1.titleIdCounter);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", \"watson-health-3-d-curve-auto-vessels-\" + WatsonHealth_3DCurveAutoVesselsDirective_1.titleIdCounter);\n    }\n  };\n\n  var WatsonHealth_3DCurveAutoVesselsDirective_1;\n  WatsonHealth_3DCurveAutoVesselsDirective.titleIdCounter = 0;\n\n  WatsonHealth_3DCurveAutoVesselsDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }];\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"isFocusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], WatsonHealth_3DCurveAutoVesselsDirective.prototype, \"size\", void 0);\n\n  WatsonHealth_3DCurveAutoVesselsDirective = WatsonHealth_3DCurveAutoVesselsDirective_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], WatsonHealth_3DCurveAutoVesselsDirective);\n\n  WatsonHealth_3DCurveAutoVesselsDirective.ɵfac = function WatsonHealth_3DCurveAutoVesselsDirective_Factory(t) {\n    return new (t || WatsonHealth_3DCurveAutoVesselsDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  WatsonHealth_3DCurveAutoVesselsDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: WatsonHealth_3DCurveAutoVesselsDirective,\n    selectors: [[\"\", \"ibmIconWatsonHealth_3DCurveAutoVessels\", \"\"]],\n    inputs: {\n      isFocusable: \"isFocusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      size: \"size\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return WatsonHealth_3DCurveAutoVesselsDirective;\n}();\n\nvar WatsonHealth_3DCurveAutoVesselsModule =\n/** @class */\nfunction () {\n  function WatsonHealth_3DCurveAutoVesselsModule() {}\n\n  WatsonHealth_3DCurveAutoVesselsModule.ɵfac = function WatsonHealth_3DCurveAutoVesselsModule_Factory(t) {\n    return new (t || WatsonHealth_3DCurveAutoVesselsModule)();\n  };\n\n  WatsonHealth_3DCurveAutoVesselsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: WatsonHealth_3DCurveAutoVesselsModule\n  });\n  WatsonHealth_3DCurveAutoVesselsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealth_3DCurveAutoVesselsModule, {\n      declarations: [WatsonHealth_3DCurveAutoVesselsComponent, WatsonHealth_3DCurveAutoVesselsDirective],\n      exports: [WatsonHealth_3DCurveAutoVesselsComponent, WatsonHealth_3DCurveAutoVesselsDirective]\n    });\n  })();\n\n  return WatsonHealth_3DCurveAutoVesselsModule;\n}();\n\nexport { WatsonHealth_3DCurveAutoVesselsComponent, WatsonHealth_3DCurveAutoVesselsDirective, WatsonHealth_3DCurveAutoVesselsModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}