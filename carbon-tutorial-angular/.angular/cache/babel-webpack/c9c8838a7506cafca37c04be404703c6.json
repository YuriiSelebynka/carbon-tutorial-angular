{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';\nimport { getAttributes } from '@carbon/icon-helpers';\nimport * as ɵngcc0 from '@angular/core';\n\nvar SplitScreenComponent =\n/** @class */\nfunction () {\n  function SplitScreenComponent() {\n    this.focusable = false;\n  }\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenComponent.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenComponent.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SplitScreenComponent.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SplitScreenComponent.prototype, \"focusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenComponent.prototype, \"innerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenComponent.prototype, \"size\", void 0);\n\n  SplitScreenComponent.ɵfac = function SplitScreenComponent_Factory(t) {\n    return new (t || SplitScreenComponent)();\n  };\n\n  SplitScreenComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SplitScreenComponent,\n    selectors: [[\"ibm-icon-split-screen\"]],\n    inputs: {\n      focusable: \"focusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      innerClass: \"innerClass\",\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[\"ibmIconSplitScreen\", \"\", 3, \"size\", \"ariaLabel\", \"ariaLabelledby\", \"ariaHidden\", \"title\", \"isFocusable\"]],\n    template: function SplitScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(0, \"svg\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledby\", ctx.ariaLabelledby)(\"ariaHidden\", ctx.ariaHidden)(\"title\", ctx.title)(\"isFocusable\", ctx.focusable);\n        ɵngcc0.ɵɵattribute(\"class\", ctx.innerClass);\n      }\n    },\n    directives: function () {\n      return [SplitScreenDirective];\n    },\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return SplitScreenComponent;\n}();\n\nvar SplitScreenDirective =\n/** @class */\nfunction () {\n  function SplitScreenDirective(elementRef) {\n    this.elementRef = elementRef;\n    this.isFocusable = false;\n    this.icons = {\n      \"32\": {\n        metadata: {\n          \"moduleName\": \"SplitScreen32\",\n          \"filepath\": \"split-screen/32.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 32,\n              \"height\": 32\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\"\n              }\n            }],\n            \"name\": \"split-screen\",\n            \"size\": 32\n          },\n          \"size\": 32\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\\\"></path></svg>\"\n      },\n      \"24\": {\n        metadata: {\n          \"moduleName\": \"SplitScreen24\",\n          \"filepath\": \"split-screen/24.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 24,\n              \"height\": 24\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\"\n              }\n            }],\n            \"name\": \"split-screen\",\n            \"size\": 24\n          },\n          \"size\": 24\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\\\"></path></svg>\"\n      },\n      \"20\": {\n        metadata: {\n          \"moduleName\": \"SplitScreen20\",\n          \"filepath\": \"split-screen/20.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 20,\n              \"height\": 20\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\"\n              }\n            }],\n            \"name\": \"split-screen\",\n            \"size\": 20\n          },\n          \"size\": 20\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\\\"></path></svg>\"\n      },\n      \"16\": {\n        metadata: {\n          \"moduleName\": \"SplitScreen16\",\n          \"filepath\": \"split-screen/16.js\",\n          \"descriptor\": {\n            \"elem\": \"svg\",\n            \"attrs\": {\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"viewBox\": \"0 0 32 32\",\n              \"fill\": \"currentColor\",\n              \"width\": 16,\n              \"height\": 16\n            },\n            \"content\": [{\n              \"elem\": \"path\",\n              \"attrs\": {\n                \"d\": \"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\"\n              }\n            }],\n            \"name\": \"split-screen\",\n            \"size\": 16\n          },\n          \"size\": 16\n        },\n        svg: \"<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"><path d=\\\"M15 4H17V28H15zM10 7V25H4V7h6m0-2H4A2 2 0 002 7V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2zM28 7V25H22V7h6m0-2H22a2 2 0 00-2 2V25a2 2 0 002 2h6a2 2 0 002-2V7a2 2 0 00-2-2z\\\"></path></svg>\"\n      }\n    };\n  }\n\n  SplitScreenDirective_1 = SplitScreenDirective;\n\n  SplitScreenDirective.prototype.ngAfterViewInit = function () {\n    var svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var icon = this.icons[this.size];\n    var domParser = new DOMParser();\n    var rawSVG = icon.svg;\n    var svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    var node = svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    var attributes = getAttributes({\n      width: icon.metadata.descriptor.attrs.height,\n      height: icon.metadata.descriptor.attrs.height,\n      viewBox: icon.metadata.descriptor.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    var attrKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attrKeys.length; i++) {\n      var key = attrKeys[i];\n      var value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      var title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      SplitScreenDirective_1.titleIdCounter++;\n      title.setAttribute(\"id\", \"split-screen-\" + SplitScreenDirective_1.titleIdCounter);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", \"split-screen-\" + SplitScreenDirective_1.titleIdCounter);\n    }\n  };\n\n  var SplitScreenDirective_1;\n  SplitScreenDirective.titleIdCounter = 0;\n\n  SplitScreenDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }];\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenDirective.prototype, \"ariaLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenDirective.prototype, \"ariaLabelledby\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SplitScreenDirective.prototype, \"ariaHidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenDirective.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], SplitScreenDirective.prototype, \"isFocusable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitScreenDirective.prototype, \"size\", void 0);\n\n  SplitScreenDirective = SplitScreenDirective_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], SplitScreenDirective);\n\n  SplitScreenDirective.ɵfac = function SplitScreenDirective_Factory(t) {\n    return new (t || SplitScreenDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  SplitScreenDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SplitScreenDirective,\n    selectors: [[\"\", \"ibmIconSplitScreen\", \"\"]],\n    inputs: {\n      isFocusable: \"isFocusable\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaHidden: \"ariaHidden\",\n      title: \"title\",\n      size: \"size\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return SplitScreenDirective;\n}();\n\nvar SplitScreenModule =\n/** @class */\nfunction () {\n  function SplitScreenModule() {}\n\n  SplitScreenModule.ɵfac = function SplitScreenModule_Factory(t) {\n    return new (t || SplitScreenModule)();\n  };\n\n  SplitScreenModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SplitScreenModule\n  });\n  SplitScreenModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SplitScreenModule, {\n      declarations: [SplitScreenComponent, SplitScreenDirective],\n      exports: [SplitScreenComponent, SplitScreenDirective]\n    });\n  })();\n\n  return SplitScreenModule;\n}();\n\nexport { SplitScreenComponent, SplitScreenDirective, SplitScreenModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}